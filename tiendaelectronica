create table clientes(
    id serial primary key,
    rut varchar(12) not null,
    nombre varchar (255) not null,
    direccion varchar(255) not null
);

create table facturas(
    id serial primary key,
    fecha_factura date not null,
    subtotal int not null,
    iva int not null,
    precio_total int not null,
    num_factura int not null,
    cliente_id int not null,
    producto_id int not null,
    foreign key (cliente_id) references clientes(id),
    foreign key (producto_id) references productos(id)
);

create table categorias(
    id serial primary key,
    nombre varchar(255) not null,
    descripcion varchar(255) not null
);

create table productos(
    id serial primary key,
    stock int not null,
    nombre varchar(255) not null,
    descripcion varchar(255) not null,
    valor_un int not null,
    categoria_id int not null,
    foreign key (categoria_id) references categorias(id)
);

create table linea(
    factura_id int not null,
    producto_id int not null,
    foreign key (factura_id) references facturas(id),
    foreign key (producto_id) references productos(id),
    cantidad int not null,
    primary key (factura_id,producto_id) 
);

-- Verificacion de tablas.
select * from categorias;
select * from clientes;
select * from productos;
select * from facturas;

-- Generando consultas.

-- Buscando la compra mas alta.
select nombre, max(precio_total) as Compra_mas_alta
from clientes
join facturas on clientes.id = facturas.cliente_id
group by nombre limit 1;

-- ¿Cuáles son los nombres de los clientes que pagaron más de 60$?
select nombre from clientes
join facturas on clientes.id = facturas.cliente_id
where precio_total > 30000;






